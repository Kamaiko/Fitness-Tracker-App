{
  "permissions": {
    "allow": [
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(git push:*)",
      "Read(//c/DevTools/Projects/halterofit/**)",
      "Bash(npm install:*)",
      "Read(//c/DevTools/Projects/**)",
      "Bash(npm start)",
      "Bash(dir \"C:\\Users\\Patrick Patenaude\\.cursor\" /b /s)",
      "Bash(findstr:*)",
      "Bash(powershell:*)",
      "Bash(dir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm uninstall:*)",
      "Bash(tree:*)",
      "Bash(for dir in src/components/analytics src/components/forms src/components/navigation src/components/shared src/components/ui src/components/workout src/hooks/analytics src/hooks/auth src/hooks/ui src/hooks/workout src/services/analytics src/services/api)",
      "Bash(done)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(xargs ls:*)",
      "Bash(git rm:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr merge:*)",
      "Bash(git pull:*)",
      "Bash(git filter-repo:*)",
      "Bash(git filter-branch:*)",
      "Bash(node:*)",
      "WebSearch",
      "Bash(if exist .claudecommandstest.md del .claudecommandstest.md)",
      "Bash(if exist .claude.actions.json del .claude.actions.json)",
      "Bash(if exist nul del nul)",
      "Bash(npm --version)",
      "Bash(eas whoami:*)",
      "Read(//c/**)",
      "Bash(awk:*)",
      "Bash(test:*)",
      "Bash(npx expo install:*)",
      "Bash(npx tsc --noEmit)",
      "Bash(eas build:list:*)",
      "Bash(gh pr diff:*)",
      "SlashCommand(/commit)",
      "Bash(npm run type-check:*)",
      "Bash(npm test:*)",
      "Bash(npm run lint:fix:*)",
      "Bash(npm start:*)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(eas build:*)",
      "Bash(gh run view:*)",
      "Bash(npm run format:check:*)",
      "Bash(python fix_types.py:*)",
      "Bash(npm run test:ci:*)",
      "Bash(if exist fix_types.py del fix_types.py)",
      "Bash(if exist fix_workout.py del fix_workout.py)",
      "Bash(find:*)",
      "Bash(if exist c:DevToolsProjectsHalterofitfix_workouts.py del c:DevToolsProjectsHalterofitfix_workouts.py)",
      "Bash(gh run list:*)",
      "Bash(npm run format:*)",
      "Bash(if not exist \"c:\\DevTools\\Projects\\Halterofit\\docs\\testing\" mkdir \"c:\\DevTools\\Projects\\Halterofit\\docs\\testing\")",
      "Bash(python:*)",
      "Bash(for file in docs/testing/*.md tests/**/*.md)",
      "Bash(do [ -f \"$file\" ])"
    ],
    "deny": [],
    "ask": []
  }
}
