name: CD - Production Build

# ============================================================================
# TODO(Phase 3+): Configure EAS Production Builds
# ============================================================================
# This workflow is currently DISABLED (workflow_dispatch only).
# It will be configured in Phase 3+ when app is ready for production deployment.
#
# Purpose:
#   - Build EAS Production builds for App Store / Play Store submission
#   - Triggered on git tags (e.g., v1.0.0) or manual dispatch
#   - Automatically submits to stores (optional)
#   - Generates release notes from commits
#
# Why not enabled now (Phase 0.5):
#   - App is not production-ready (still in infrastructure phase)
#   - No features implemented yet for end users
#   - Store deployment requires app review process
#
# When to enable:
#   - Phase 3+: When app has MVP features and is ready for beta/production
#   - After manual testing and QA approval
#   - When ready to submit to App Store / Play Store
# ============================================================================

on:
  # Manual trigger only - no automatic builds yet
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        default: 'all'
        type: choice
        options:
          - android
          - ios
          - all
      submit:
        description: 'Submit to stores after build'
        required: false
        default: false
        type: boolean

  # TODO(Phase 3+): Uncomment to enable automatic production builds on tags
  # push:
  #   tags:
  #     - 'v*.*.*'  # Trigger on version tags (e.g., v1.0.0, v2.1.3)

permissions:
  contents: write # For creating releases
  actions: read

jobs:
  production-build:
    name: EAS Production Build (${{ github.event.inputs.platform || 'all' }})
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: TODO Phase 3+
        run: |
          echo "‚ö†Ô∏è  This workflow is not yet configured"
          echo "üìã Configuration steps required:"
          echo "   1. Add EXPO_TOKEN secret to GitHub repo"
          echo "   2. Configure EAS production credentials (App Store, Play Store)"
          echo "   3. Setup code signing certificates"
          echo "   4. Configure app store submission secrets"
          echo "   5. Implement auto-increment build numbers"
          echo "   6. Add release notes generation"
          echo ""
          echo "üìö Documentation: docs/CONTRIBUTING.md (CI/CD Architecture section)"
          echo "üìö EAS Build Docs: https://docs.expo.dev/build/introduction/"
          echo "üìö EAS Submit Docs: https://docs.expo.dev/submit/introduction/"
          exit 1

      # TODO(Phase 3+): Implement EAS production build steps
      # - name: Checkout code
      #   uses: actions/checkout@v5
      #   with:
      #     fetch-depth: 0  # Full history for release notes
      #
      # - name: Setup Node.js
      #   uses: actions/setup-node@v6
      #   with:
      #     node-version: '22'
      #     cache: 'npm'
      #
      # - name: Setup Expo
      #   uses: expo/expo-github-action@v8
      #   with:
      #     expo-version: latest
      #     eas-version: latest
      #     token: ${{ secrets.EXPO_TOKEN }}
      #
      # - name: Install dependencies
      #   run: npm ci
      #
      # - name: Run full CI suite before production build
      #   run: |
      #     npm run type-check
      #     npm run lint
      #     npm run test:ci
      #
      # - name: EAS Build (Production)
      #   run: eas build --profile production --platform ${{ github.event.inputs.platform }} --non-interactive
      #
      # - name: EAS Submit (if enabled)
      #   if: github.event.inputs.submit == 'true'
      #   run: eas submit --profile production --platform ${{ github.event.inputs.platform }} --non-interactive
      #
      # - name: Generate Release Notes
      #   id: release_notes
      #   run: |
      #     # Generate release notes from git commits since last tag
      #     # Format: conventional commits (feat, fix, docs, etc.)
      #
      # - name: Create GitHub Release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: ${{ steps.release_notes.outputs.notes }}
      #     draft: false
      #     prerelease: false
