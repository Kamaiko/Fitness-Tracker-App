name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# Cancel in-progress runs when a new commit is pushed to the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Default permissions (read-only)
permissions:
  contents: read

jobs:
  # ============================================================================
  # Job 1: Code Quality (TypeScript + ESLint + Prettier)
  # Runs in parallel with unit-tests and security-scan
  # ============================================================================
  code-quality:
    name: Code Quality (TypeScript, ESLint, Prettier)
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        # SHA pinning for security: immutable reference + version comment for readability
        # Dependabot will automatically update both SHA and comment
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # TypeScript Incremental Build Cache
      # .tsbuildinfo enables faster subsequent type-checks
      - name: Cache TypeScript build info
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .tsbuildinfo
          key: ${{ runner.os }}-tsbuildinfo-${{ hashFiles('**/tsconfig.json', 'src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-tsbuildinfo-

      # ESLint Cache for faster linting
      - name: Cache ESLint
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .eslintcache
          key: ${{ runner.os }}-eslintcache-${{ hashFiles('**/.eslintrc.json', 'src/**/*.ts', 'src/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-eslintcache-

      - name: TypeScript type-check
        run: npm run type-check

      - name: ESLint
        run: npm run lint -- --cache --cache-location .eslintcache

      - name: Prettier format check
        run: npm run format:check -- --ignore-path .prettierignore

  # ============================================================================
  # Job 2: Unit Tests (Jest with Coverage)
  # Runs in parallel with code-quality and security-scan
  # ============================================================================
  unit-tests:
    name: Unit Tests (Jest)
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Jest Cache for faster test runs
      - name: Cache Jest
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .jest-cache
          key: ${{ runner.os }}-jest-${{ hashFiles('**/jest.config.js', 'src/**/*.test.ts', 'src/**/*.test.tsx') }}
          restore-keys: |
            ${{ runner.os }}-jest-

      - name: Run tests with coverage
        run: npm run test:ci

      # TODO(Phase 1): Uncomment when coverage reaches 40%
      # - name: Check coverage threshold
      #   run: |
      #     node -e "
      #     const coverage = require('./coverage/coverage-summary.json');
      #     const lines = coverage.total.lines.pct;
      #     if (lines < 40) {
      #       console.error(\`Coverage ${lines}% is below 40% threshold\`);
      #       process.exit(1);
      #     }
      #     console.log(\`Coverage: ${lines}% ‚úÖ\`);
      #     "

      - name: Upload coverage reports
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v4.6.0
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  # ============================================================================
  # Job 3: Security Scan (npm audit)
  # Runs in parallel with code-quality and unit-tests
  # ============================================================================
  security-scan:
    name: Security Scan (npm audit)
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: false

      - name: Security scan results
        if: failure()
        run: |
          echo "üö® Security vulnerabilities detected (HIGH or CRITICAL)"
          echo "Run 'npm audit' locally to see details"
          echo "Fix with 'npm audit fix' or review manually"
          exit 1

  # ============================================================================
  # Job 4: Dependabot Auto-Merge
  # Requires ALL previous jobs to pass before merging
  # ============================================================================
  dependabot-auto-merge:
    name: Dependabot Auto-Merge
    needs: [code-quality, unit-tests, security-scan]
    runs-on: ubuntu-latest

    # Only run on Dependabot PRs
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'

    # Elevated permissions for merging
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@08eff52bf64351f401fb50d4972fa95b9f2c2d1b # v2.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge GitHub Actions
        # GitHub Actions: CI infrastructure, not app code
        # Industry standard: Auto-merge all versions after CI passes
        # NOTE: fetch-metadata returns 'github_actions' not 'github-actions'
        if: steps.metadata.outputs.package-ecosystem == 'github_actions'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge dev dependencies
        # Dev dependencies: ESLint, TypeScript, Jest, etc.
        # Safe to auto-merge minor/patch, manual review for major
        if: |
          steps.metadata.outputs.dependency-type == 'direct:development' &&
          steps.metadata.outputs.update-type != 'version-update:semver-major'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge runtime patch and minor updates
        # Runtime patch (0.0.X): Bug fixes only
        # Runtime minor (0.X.0): New features, backward compatible (semver promise)
        # Industry standard: Auto-merge both after CI passes
        # Example: react-native 0.73.1 -> 0.73.2 (patch) or 0.73.0 -> 0.74.0 (minor)
        if: |
          steps.metadata.outputs.dependency-type == 'direct:production' &&
          (steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
           steps.metadata.outputs.update-type == 'version-update:semver-minor')
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on MAJOR updates requiring review
        # Major updates (X.0.0): Breaking changes - ALWAYS require manual review
        # Post helpful comment with action items
        if: |
          steps.metadata.outputs.dependency-type == 'direct:production' &&
          steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "$PR_URL" --body "üö® **MAJOR UPDATE - Breaking Changes Expected**

          This is a ${{ steps.metadata.outputs.update-type }} update for a runtime dependency.

          **Required actions before merging:**
          1. Read the changelog and migration guide
          2. Review all breaking changes
          3. Test the app thoroughly on both iOS and Android
          4. Check for required code changes

          ‚ö†Ô∏è Do NOT auto-merge this PR without careful review!"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
